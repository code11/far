{"version":3,"sources":["src/app.js","src/environment.js","src/main.js","src/resources/index.js","src/resources/validation-renderer.js","src/resources/elements/true-false-radio.js"],"names":["App","of","validationController","validateTrigger","change","addRenderer","activate","VeLib","core","init","then","console","log","ensure","required","minLength","maxLength","on","debug","testing","configure","aurelia","use","standardConfiguration","feature","developmentLogging","plugin","start","setRoot","config","CustomValidationFormRenderer","render","instruction","unrender","result","elements","element","remove","add","valid","formGroup","closest","classList","message","document","createElement","className","textContent","id","appendChild","querySelector","removeChild","querySelectorAll","length","TrueFalseRadio"],"mappings":"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","file":"app-bundle.js","sourcesContent":["import {inject, NewInstance} from 'aurelia-dependency-injection';\nimport {ValidationController, ValidationRules, validateTrigger} from 'aurelia-validation';\nimport {CustomValidationFormRenderer} from 'resources/validation-renderer';\n\n@inject(NewInstance.of(ValidationController))\nexport class App {\n  constructor(validationController) {\n    this.validationController = validationController;\n    this.validationController.validateTrigger = validateTrigger.change;\n    this.validationController.addRenderer(new CustomValidationFormRenderer);\n  }\n\n  activate() {\n    VeLib.core.init('https://verified-dev.c11.io')\n      .then(() => {\n        console.log('velib inifdsfdt');\n      });\n  }\n}\n\n\nValidationRules\n  .ensure('fullname')\n    .required()\n  .ensure('ssn')\n    .required()\n    .minLength(10)\n    .maxLength(10)\n  .on(App);\n","export default {\n  debug: true,\n  testing: true\n};\n","import environment from './environment';\n\nexport function configure(aurelia) {\n  aurelia.use\n    .standardConfiguration()\n    .feature('resources');\n\n  if (environment.debug) {\n    aurelia.use.developmentLogging();\n  }\n\n  if (environment.testing) {\n    aurelia.use.plugin('aurelia-testing');\n    aurelia.use.plugin('aurelia-validation');\n  }\n\n  aurelia.start().then(() => aurelia.setRoot());\n}\n","export function configure(config) {\n  //config.globalResources([]);\n}\n","import {\n  ValidationRenderer,\n  RenderInstruction,\n  ValidateResult\n} from 'aurelia-validation';\n\nexport class CustomValidationFormRenderer {\n  render(instruction: RenderInstruction) {\n    for (let { result, elements } of instruction.unrender) {\n      for (let element of elements) {\n        this.remove(element, result);\n      }\n    }\n\n    for (let { result, elements } of instruction.render) {\n      for (let element of elements) {\n        this.add(element, result);\n      }\n    }\n  }\n\n  add(element: Element, result: ValidateResult) {\n    if (result.valid) {\n      return;\n    }\n\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    // add the has-error class to the enclosing form-group div\n    formGroup.classList.add('has-error');\n\n    // add help-block\n    const message = document.createElement('span');\n    message.className = 'help-block validation-message';\n    message.textContent = result.message;\n    message.id = `validation-message-${result.id}`;\n    formGroup.appendChild(message);\n  }\n\n  remove(element: Element, result: ValidateResult) {\n    if (result.valid) {\n      return;\n    }\n\n    const formGroup = element.closest('.form-group');\n    if (!formGroup) {\n      return;\n    }\n\n    // remove help-block\n    const message = formGroup.querySelector(`#validation-message-${result.id}`);\n    if (message) {\n      formGroup.removeChild(message);\n\n      // remove the has-error class from the enclosing form-group div\n      if (formGroup.querySelectorAll('.help-block.validation-message').length === 0) {\n        formGroup.classList.remove('has-error');\n      }\n    }\n  }\n}\n","import {bindable} from 'aurelia-framework';\n\nexport class TrueFalseRadio {\n  @bindable value;\n  @bindable name;\n}\n"],"sourceRoot":".."}